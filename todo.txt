### Core Features ###
- Blinking caret
- Highlight and selection capabilities with mouse and keyboard.
- Common hotkey implementations, including Ctrl+C, Ctrl+V, and Ctrl+X, for copy, paste and cut, respectively.
  * - CTRL+A to select all
  * - CTRL+D to deselect
- Holding Ctrl with arrow keys should increase caret index on a per word basis.
- Word-wrapping functionality
- key-repeat
- Make the textbox scroll to where the caret lands.
- Fully functional scroll-bar: allowing clicking and moving, as well as updating when we scroll with arrow keys or mouse wheel.
- Allow scroll-bar to be visible or not

Refactor break-handling:
  * Make word-wrapping optional.
  * Make multiline optional.
  * If word-wrapping is off and multiline is on, make sure (4) in scroll refactor is enabled.
  * If word-wrapping is on and multiline is off, word-wrapping should not do anything. 
  * If multiline is off, pasting content with `\n` should be trimmed and replaced with spaces.
  * If multiline is off and word-wrapping if off, this should simulate a single-line textbox.

Refactor scrolling functionality:
  * - Convert scrollOffset to a `FastVector2`.
  * - Use `x` and `y` respectively to determine scroll horizontally and vertically.
  * Instead of hiding scroll-bar and adjusting margin accordingly, keep a fixed scroll-bar width to leave a gap between respective margins to prevent misbehaviour in textbox.
  * Allow Alt+Mouse Wheel to scroll left and right in a multiline scenario with word-wrapping off.
  * Determine scroll based on exact caret location, and move along accordingly.

Allow single-line functionality - scroll based on when typing (requires scroll refactoring)

### Issues ###
- Don't make unneccessary `drawCharacter` calls if the text to render is outside the range of the TextBox. (efficiency)

### Desirable Features ###
Holding shift and clicking somewhere in the TextBox should highlight the text to that index.

- Make scrollbar disappear if the text does not need scrolling.
Undo History